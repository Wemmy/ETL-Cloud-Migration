# deploy.yml
name: Deploy Streamlit App to ECR # name

on:
  push:
    paths-ignore:
      - "readme.md"
      - ".github/workflows/**"
    branches: # the branch to be deployed
      - "main"

jobs:
  build:
    name: Build and push Image
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: streamlit_action
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      # - name: SSH and Update Docker container on EC2
      #   uses: appleboy/ssh-action@master
      #   env:
      #     ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
      #     ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      #     IMAGE_TAG: streamlit_action
      #     CONTAINER_NAME: dashboard
      #   with:
      #     host: ${{ secrets.EC2_HOST }}
      #     username: ${{ secrets.EC2_USERNAME }}
      #     key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
      #     script: |
      #       docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      #       docker stop $CONTAINER_NAME || true
      #       docker rm $CONTAINER_NAME || true
      #       docker run --name $CONTAINER_NAME -d $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
